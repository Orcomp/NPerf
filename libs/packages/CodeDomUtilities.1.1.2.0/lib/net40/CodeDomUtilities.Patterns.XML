<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CodeDomUtilities.Patterns</name>
    </assembly>
    <members>
        <member name="T:CodeDomUtilities.Patterns.CodeDomPatternException">
            <summary>
            Represents an error in the generation of CodeDomPattern artifacts.
            </summary>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPatternException.#ctor">
            <summary>
            Initializes a new instance of the CodeDomPatternException class.
            </summary>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPatternException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CodeDomPatternException class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPatternException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the CodeDomPatternException class with a specified
            error message and a reference to the inner exception that is the cause of
            this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="inner">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPatternException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the CodeDomPatternException class with serialized data.
            </summary>
            <param name="info">The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:CodeDomUtilities.Patterns.CodeDomPatternIEquatableImplementation">
            <summary>
            Models and generates the implementation of the IEquatable&lt;T&gt; interface.
            </summary>
        </member>
        <member name="T:CodeDomUtilities.Patterns.CodeDomPattern">
            <summary>
            Base class of CodeDom patterns.
            </summary>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPattern.Generate">
            <summary>
            Generates the artifacts of this pattern.
            </summary>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPatternIEquatableImplementation.Generate">
            <summary>
            Generates the artifacts for implementing the IEquatable&lt;T&gt; interface.
            </summary>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternIEquatableImplementation.Type">
            <summary>
            Gets or sets the type that is going to implement the IEquatable&lt;T&gt; interface.
            </summary>
            <value>The type that is going to implement the IEquatable&lt;T&gt; interface.</value>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternIEquatableImplementation.ThrowExceptionOnNullArgument">
            <summary>
            Gets or sets a value indicating whether an exception is thrown when the comparison target is null.
            </summary>
            <value>A value indicating whether an exception is thrown when the comparison target is null.</value>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternIEquatableImplementation.ComparisonItems">
            <summary>
            Gets or sets an enumerable for comparison items.
            </summary>
            <value>An enumerable for comparison items.</value>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternIEquatableImplementation.MakePropertyVirtual">
            <summary>
            Gets or sets a value indicating whether the equals method will be virtual.
            </summary>
            <value>A value indicating whether the equals method will be virtual.</value>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternIEquatableImplementation.EqualsMethod">
            <summary>
            Gets the Equals method artifact for the IEquatable&lt;T&gt; interface.
            </summary>
            <value>The Equals method artifact for the IEquatable&lt;T&gt; interface.</value>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternIEquatableImplementation.BaseType">
            <summary>
            Gets the base type reference artifact to IEquatable&lt;T&gt;.
            </summary>
            <value>The base type reference artifact to IEquatable&lt;T&gt;.</value>
        </member>
        <member name="T:CodeDomUtilities.Patterns.CodeDomPatternIEquatableImplementationComparisonItem">
            <summary>
            Describes and generates comparison items.
            </summary>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPatternIEquatableImplementationComparisonItem.FromProperty(System.CodeDom.CodeMemberProperty,CodeDomUtilities.Patterns.CodeDomPatternIEquatableImplementationComparisonBehavior,System.Boolean)">
            <summary>
            Creates a comparison item for comparing a property.
            </summary>
            <param name="property">The property to compare.</param>
            <param name="comparisonBehavior">The comparison behavior for this comparison info object.</param>
            <param name="checkForNullValues">A value indicating whether the comparison will check for null values.</param>
            <returns>The comparison item.</returns>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPatternIEquatableImplementationComparisonItem.FromField(System.CodeDom.CodeMemberField,CodeDomUtilities.Patterns.CodeDomPatternIEquatableImplementationComparisonBehavior,System.Boolean)">
            <summary>
            Creates a comparison item for comparing a field.
            </summary>
            <param name="field">The field to compare.</param>
            <param name="comparisonBehavior">The comparison behavior for this comparison info object.</param>
            <param name="checkForNullValues">A value indicating whether the comparison will check for null values.</param>
            <returns>The comparison item.</returns>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPatternIEquatableImplementationComparisonItem.Generate">
            <summary>
            Generates a comparison expression.
            </summary>
            <returns>A code expression that compare for equality.</returns>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPatternIEquatableImplementationComparisonItem.GetComposedComparison(System.CodeDom.CodeExpression)">
            <summary>
            Generates the composed comparison expression.
            </summary>
            <param name="coreComparison">The comparison expression.</param>
            <returns>The composed comparison expression.</returns>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternIEquatableImplementationComparisonItem.ComparisonBehavior">
            <summary>
            Gets or sets the comparison behavior for this comparison info object.
            </summary>
            <value>The comparison behavior for this comparison info object.</value>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternIEquatableImplementationComparisonItem.CheckForNullValues">
            <summary>
            Gets or sets a value indicating whether the comparison will check for null values.
            </summary>
            <value>A value indicating whether the comparison will check for null values.</value>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternIEquatableImplementationComparisonItem.LocalExpression">
            <summary>
            Gets or sets the local expression to compare.
            </summary>
            <value>The local expression to compare.</value>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternIEquatableImplementationComparisonItem.OtherExpression">
            <summary>
            Gets or sets the other expression to compare.
            </summary>
            <value>The other expression to compare.</value>
        </member>
        <member name="T:CodeDomUtilities.Patterns.CodeDomPatternIEquatableImplementationComparisonBehavior">
            <summary>
            Posible values for comparison behavior.
            </summary>
        </member>
        <member name="F:CodeDomUtilities.Patterns.CodeDomPatternIEquatableImplementationComparisonBehavior.Identity">
            <summary>
            Comparison will be performed using identity equality.
            </summary>
        </member>
        <member name="F:CodeDomUtilities.Patterns.CodeDomPatternIEquatableImplementationComparisonBehavior.ValueEquality">
            <summary>
            Comparison will be performed using value equality.
            </summary>
        </member>
        <member name="F:CodeDomUtilities.Patterns.CodeDomPatternIEquatableImplementationComparisonBehavior.SequenceEquality">
            <summary>
            Comparison will be performed using sequence equality.
            </summary>
        </member>
        <member name="T:CodeDomUtilities.Patterns.CodeDomPatternINotifyPropertyChangedImplementation">
            <summary>
            Models and generates the implementation of the INotifyPropertyChanged interface.
            </summary>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPatternINotifyPropertyChangedImplementation.Generate">
            <summary>
            Generates the artifacts for implementing the INotifyPropertyChanged interface.
            </summary>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternINotifyPropertyChangedImplementation.RaisePropertyChangedMethodName">
            <summary>
            Gets or sets the name of the method used for raising the PropertyChanged event.
            </summary>
            <value>The name of the method used for raising the PropertyChanged event.</value>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternINotifyPropertyChangedImplementation.MakeRaisePropertyChangedProtected">
            <summary>
            Gets or sets a value indicating whether the RaisePropertyChanged method will have protected access.
            </summary>
            <value>A value indicating whether the RaisePropertyChanged method will have protected access.</value>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternINotifyPropertyChangedImplementation.BaseType">
            <summary>
            Gets the base type reference artifact to INotifyPropertyChanged.
            </summary>
            <value>The base type reference artifact to INotifyPropertyChanged.</value>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternINotifyPropertyChangedImplementation.Event">
            <summary>
            Gets the PropertyChanged event artifact.
            </summary>
            <value>The PropertyChanged event artifact.</value>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternINotifyPropertyChangedImplementation.RaisePropertyChangedMethod">
            <summary>
            Gets the method used to raise the PropertyChanged event if applicable.
            </summary>
            <value>The method used to raise the PropertyChanged event if applicable.</value>
        </member>
        <member name="T:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifactBaseTypeReference">
            <summary>
            An Artifact for base type references.
            </summary>
        </member>
        <member name="T:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifact">
            <summary>
            Models the output artifact of a CodeDomPattern instance.
            </summary>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifact.#ctor">
            <summary>
            Initializes a new instance of the CodeDomPatternOutputArtifact class.
            </summary>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifact.Apply(System.CodeDom.CodeObject)">
            <summary>
            Applies the artifact on the target CodeObject.
            </summary>
            <param name="target">The CodeObject on which the artifact is applied.</param>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifactBaseTypeReference.#ctor(System.CodeDom.CodeTypeReference)">
            <summary>
            Initializes a new instance of the CodeDomPatternOutputArtifactBaseTypeReference class.
            </summary>
            <param name="baseType">The type reference to be used as base type.</param>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifactBaseTypeReference.Apply(System.CodeDom.CodeObject)">
            <summary>
            Applies the artifact on a CodeTypeDeclaration instance.
            </summary>
            <param name="target">The instance of the CodeTypeDeclaration.</param>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifactBaseTypeReference.BaseType">
            <summary>
            Gets the type reference to be used as base type.
            </summary>
            <value>The type reference to be used as base type.</value>
        </member>
        <member name="T:CodeDomUtilities.Patterns.CodeDomPatternPropertyChangedProperty">
            <summary>
            Models and generates the property changed pattern.
            </summary>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPatternPropertyChangedProperty.Generate">
            <summary>
            Generates the property changed artifacts.
            </summary>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternPropertyChangedProperty.TypeReference">
            <summary>
            Gets or sets the type of the attribute.
            </summary>
            <value>The type of the attribute.</value>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternPropertyChangedProperty.AttributeName">
            <summary>
            Gets or sets the name of the attribute.
            </summary>
            <value>The name of the attribute.</value>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternPropertyChangedProperty.AttributeNameToFieldNameFunction">
            <summary>
            Gets or sets the function used to transform the attribute name into a field name.
            </summary>
            <value>The function used to transform the attribute name into a field name.</value>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternPropertyChangedProperty.MakePropertyVirtual">
            <summary>
            Gets or sets a value indicating whether the property will be virtual.
            </summary>
            <value>A value indicating whether the property will be virtual.</value>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternPropertyChangedProperty.RaisePropertyChangedMethodName">
            <summary>
            Gets or sets the name of the method used to raise the PropertyChanged event, if any.
            </summary>
            <value>The name of the method used to raise the PropertyChanged event, if any.</value>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternPropertyChangedProperty.FieldArtifact">
            <summary>
            Gets the field artifact of the pattern.
            </summary>
            <value>The field artifact of the pattern.</value>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternPropertyChangedProperty.PropertyArtifact">
            <summary>
            Gets the property artifact of the pattern.
            </summary>
            <value>The property artifact of the pattern.</value>
        </member>
        <member name="T:CodeDomUtilities.Patterns.CodeDomPatternReadOnlyProperty">
            <summary>
            Models and generates the read-only property pattern.
            </summary>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPatternReadOnlyProperty.Generate">
            <summary>
            Generates the read-only property artifacts.
            </summary>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternReadOnlyProperty.TypeReference">
            <summary>
            Gets or sets the type of the attribute.
            </summary>
            <value>The type of the attribute.</value>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternReadOnlyProperty.AttributeName">
            <summary>
            Gets or sets the name of the attribute.
            </summary>
            <value>The name of the attribute.</value>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternReadOnlyProperty.MakePropertyVirtual">
            <summary>
            Gets or sets a value indicating whether the property will be virtual.
            </summary>
            <value>A value indicating whether the property will be virtual.</value>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternReadOnlyProperty.AttributeNameToFieldNameFunction">
            <summary>
            Gets or sets the function used to transform the attribute name into a field name.
            </summary>
            <value>The function used to transform the attribute name into a field name.</value>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternReadOnlyProperty.FieldArtifact">
            <summary>
            Gets the field artifact of the pattern.
            </summary>
            <value>The field artifact of the pattern.</value>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternReadOnlyProperty.PropertyArtifact">
            <summary>
            Gets the property artifact of the pattern.
            </summary>
            <value>The property artifact of the pattern.</value>
        </member>
        <member name="T:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifactNamespace">
            <summary>
            An artifact for namespaces.
            </summary>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifactNamespace.#ctor(System.CodeDom.CodeNamespace)">
            <summary>
            Initializes a new instance of the CodeDomPatternOutputArtifactNamespace class.
            </summary>
            <param name="namespace">The namespace.</param>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifactNamespace.Apply(System.CodeDom.CodeObject)">
            <summary>
            Applies the artifact on a CodeCompileUnit instance.
            </summary>
            <param name="target">The instance of the CodeCompileUnit.</param>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifactNamespace.Namespace">
            <summary>
            Gets the namespace.
            </summary>
            <value>The namespace.</value>
        </member>
        <member name="T:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifactEvent">
            <summary>
            An artifact for events.
            </summary>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifactEvent.#ctor(System.CodeDom.CodeMemberEvent)">
            <summary>
            Initializes a new instance of the CodeDomPatternOutputArtifactEvent class.
            </summary>
            <param name="event">The event.</param>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifactEvent.Apply(System.CodeDom.CodeObject)">
            <summary>
            Applies the artifact on a CodeTypeDeclaration instance.
            </summary>
            <param name="target">The instance of the CodeTypeDeclaration.</param>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifactEvent.Event">
            <summary>
            Gets the event.
            </summary>
            <value>The event.</value>
        </member>
        <member name="T:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifactField">
            <summary>
            An artifact for fields.
            </summary>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifactField.#ctor(System.CodeDom.CodeMemberField)">
            <summary>
            Initializes a new instance of the CodeDomPatternOutputArtifactField class.
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifactField.Apply(System.CodeDom.CodeObject)">
            <summary>
            Applies the artifact on a CodeTypeDeclaration instance.
            </summary>
            <param name="target">The instance of the CodeTypeDeclaration.</param>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifactField.Field">
            <summary>
            Gets the field.
            </summary>
            <value>The field.</value>
        </member>
        <member name="T:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifactMethod">
            <summary>
            An artifact for methods.
            </summary>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifactMethod.#ctor(System.CodeDom.CodeMemberMethod)">
            <summary>
            Initializes a new instance of the CodeDomPatternOutputArtifactMethod class.
            </summary>
            <param name="method">The method.</param>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifactMethod.Apply(System.CodeDom.CodeObject)">
            <summary>
            Applies the artifact on a CodeTypeDeclaration instance.
            </summary>
            <param name="target">The instance of the CodeTypeDeclaration.</param>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifactMethod.Method">
            <summary>
            Gets the method.
            </summary>
            <value>The method.</value>
        </member>
        <member name="T:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifactProperty">
            <summary>
            An artifact for properties.
            </summary>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifactProperty.#ctor(System.CodeDom.CodeMemberProperty)">
            <summary>
            Initializes a new instance of the CodeDomPatternOutputArtifactProperty class.
            </summary>
            <param name="property">The property.</param>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifactProperty.Apply(System.CodeDom.CodeObject)">
            <summary>
            Applies the artifact on a CodeTypeDeclaration instance.
            </summary>
            <param name="target">The instance of the CodeTypeDeclaration.</param>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifactProperty.Property">
            <summary>
            Gets the property.
            </summary>
            <value>The property.</value>
        </member>
        <member name="T:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifactTypeDeclaration">
            <summary>
            An artifact for type declarations.
            </summary>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifactTypeDeclaration.#ctor(System.CodeDom.CodeTypeDeclaration)">
            <summary>
            Initializes a new instance of the CodeDomPatternOutputArtifactTypeDeclaration class.
            </summary>
            <param name="typeDeclaration">The type declaration.</param>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifactTypeDeclaration.Apply(System.CodeDom.CodeObject)">
            <summary>
            Applies the artifact on a CodeTypeDeclaration instance or on a CodeNamespace instance.
            </summary>
            <param name="target">An instance of type CodeTypeDeclaration or an instance of type CodeNamespace.</param>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternOutputArtifactTypeDeclaration.TypeDeclaration">
            <summary>
            Gets the type declaration.
            </summary>
            <value>The type declaration.</value>
        </member>
        <member name="T:CodeDomUtilities.Patterns.CodeDomPatternReadWriteProperty">
            <summary>
            Models and generates the read-write property pattern.
            </summary>
        </member>
        <member name="M:CodeDomUtilities.Patterns.CodeDomPatternReadWriteProperty.Generate">
            <summary>
            Generates the read-write property artifacts.
            </summary>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternReadWriteProperty.TypeReference">
            <summary>
            Gets or sets the type of the attribute.
            </summary>
            <value>The type of the attribute.</value>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternReadWriteProperty.AttributeName">
            <summary>
            Gets or sets the name of the attribute.
            </summary>
            <value>The name of the attribute.</value>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternReadWriteProperty.MakePropertyVirtual">
            <summary>
            Gets or sets a value indicating whether the property will be virtual.
            </summary>
            <value>A value indicating whether the property will be virtual.</value>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternReadWriteProperty.AttributeNameToFieldNameFunction">
            <summary>
            Gets or sets the function used to transform the attribute name into a field name.
            </summary>
            <value>The function used to transform the attribute name into a field name.</value>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternReadWriteProperty.FieldArtifact">
            <summary>
            Gets the field artifact of the pattern.
            </summary>
            <value>The field artifact of the pattern.</value>
        </member>
        <member name="P:CodeDomUtilities.Patterns.CodeDomPatternReadWriteProperty.PropertyArtifact">
            <summary>
            Gets the property artifact of the pattern.
            </summary>
            <value>The property artifact of the pattern.</value>
        </member>
    </members>
</doc>
